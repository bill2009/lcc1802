; generated by lcc-xr18NW $Version: 5.0 - XR18NW $ on Tue Apr 11 17:16:52 2017

SP:	equ	2 ;stack pointer
memAddr: equ	14
retAddr: equ	6
retVal:	equ	15
regArg1: equ	12
regArg2: equ	13
	listing off
	include lcc1802proloNW.inc
	listing on
_PIN4:
	db 0
;$$function start$$ _boydinc
_boydinc:		;framesize=2
;void boydinc(){
;	asm(" include \"boydscan.inc\"\n");
 include "boydscan.inc"
;}
L1:
	Cretn

;$$function end$$ _boydinc
;$$function start$$ _disp1
_disp1:		;framesize=2
;void disp1(unsigned char d){//display a byte as two hex digits
;	asm(" glo 12\n ani 0x0f\n" //prep bottom digit
 glo 12
 ani 0x0f
 dec 2
 str 2
 out 7
 glo 12
 shr
 shr
 shr
 shr
 dec 2
 str 2
 out 7
;}
L3:
	Cretn

;$$function end$$ _disp1
;$$function start$$ _dispmemloc
_dispmemloc:		;framesize=14
	pushr R4
	pushr R5
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	st2 R12,'O',sp,(14+1); flag1 
;void dispmemloc(unsigned int loc){
;	register unsigned char* m=0;
	ldaD R7,0; reg:acon
;	initleds();
;	disp1(m[loc+1]);
 req
 seq
 dec 2
 out 7
 req
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	incm R11,1
	alu2 R11,R11,R7,add,adc	;ADDP2(reg,reg)
	ldn1 R12,R11	;opt14*
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	disp1(m[loc]);
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	alu2 R11,R11,R7,add,adc	;ADDP2(reg,reg)
	ldn1 R12,R11	;opt14*
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	disp1(loc&0x0f);
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	alu2I R11,R11,15,ani,ani ;removed copy;BANDU2(reg,con)  
	cpy1 R12,R11
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _disp1
;	disp1(loc>>8);
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	ghi	R11	;opt2
	plo	R11
	ldi	0
	phi	R11	
	cpy1 R12,R11
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _disp1
;}
L5:
	release 4; release room for outgoing arguments
	popf R7	;opt11.3
	popm R6	;opt11.4
	popm R5	;opt11.4
	popl R4	;opt11.4
	Cretn

;$$function end$$ _dispmemloc
;$$function start$$ _dispval
_dispval:		;framesize=8
	pushr R7
	reserve 4; save room for outgoing arguments
	st2 R12,'O',sp,(8+1); flag1 
	ldA2 R11,'O',sp,(8+1); reg:addr
	ld2 R10,'O',sp,(8+1) ;reg:INDIRI2(addr)
	str1 R10,R11; ASGNU1(indaddr,reg)		DH
;void dispval(unsigned char v){
;	initleds();
;	disp1(v);
 req
 seq
 dec 2
 out 7
 req
	ld1 R12,'O',sp,(8+1)
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	for (i=6;i!=0;i--) out(7,0);
	ldaD R7,6; reg:acon
	lbr L12
L9:
	ldaD R12,7; reg:acon
	ld2z R13
	Ccall _out; CALLI2(ar)
L10:
	decm R7,1	;SUBU2(reg,consm)
L12:
	jnzU2 R7,L9; NE 0 
;}
L7:
	release 4; release room for outgoing arguments
	popr R7
	Cretn

;$$function end$$ _dispval
;$$function start$$ _disp42
_disp42:		;framesize=6
	reserve 4
;void disp42(){
;	initleds();
;	out(7,2);
 req
 seq
 dec 2
 out 7
 req
	ldaD R12,7; reg:acon
	ldaD R13,2; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,4);
	ldaD R12,7; reg:acon
	ldaD R13,4; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;}
L13:
	release 4
	Cretn

;$$function end$$ _disp42
;$$function start$$ _main
_main: ;copt is peeping your size 12 frame with oct 23 rules
	pushr R5
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
;{
;	unsigned int loc=0;
	ld2z R6
;	unsigned char m='o'; //displaying o=eeprom,a=ram
	ldaD R5,111; reg:acon
;	disp42();
	Ccall _disp42
;	delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
	lbr L17
L16:
;	while(1){
;		dispmemloc(loc);
	cpy2 R12,R6 ;LOADU2*(reg)
	Ccall _dispmemloc
;		k=boydscan();
	Ccall _boydscan; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	cpy1 R7,R11;LOADU1(reg)
;		dispval(k); delay(250);
	cpy1 R12,R7
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _dispval
	ldaD R12,250; reg:acon
	Ccall _delay
;		if (99==k){
	jneU1I R7,99,L19	; DH 4
;			if (m=='o'){
	jneU1I R5,111,L21	; DH 4
;				loc=4096;
	ldaD R6,4096; reg:acon
;				m='a';
	ldaD R5,97; reg:acon
;			}else{
	lbr L20
L21:
;				loc=0;
	ld2z R6
;				m='o';
	ldaD R5,111; reg:acon
;			}
;		}else
	lbr L20
L19:
;			loc+=2;
	incm R6,2
L20:
;		}
L17:
;	while(1){
	lbr L16
;}
L15:
	release 4; release room for outgoing arguments
	popf R7	;opt11.3
	popm R6	;opt11.4
	popl R5	;opt11.4
	Cretn

;$$function end$$ _main
;$$function start$$ _delay
_delay:		;framesize=10
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2054) 1
;void delay(unsigned int howlong){
;	for (i=1;i!=howlong;i++){
	ldaD R6,1; reg:acon
	lbr L27
L24:
;		oneMs();
	Ccall _oneMs; CALLI2(ar)
;	}
L25:
;	for (i=1;i!=howlong;i++){
	incm R6,1
L27:
	jneU2 R6,R7,L24; NE
;}
L23:
	release 4; release room for outgoing arguments
	popf R7	;opt11.3
	popl R6	;opt11.3
	Cretn

;$$function end$$ _delay
;$$function start$$ _olduinoincluder
_olduinoincluder:		;framesize=2
;void olduinoincluder(){
;	asm("\tinclude olduino.inc\n");
	include olduino.inc
;}
L28:
	Cretn

;$$function end$$ _olduinoincluder
	include lcc1802epiloNW.inc
	include IO1802.inc
