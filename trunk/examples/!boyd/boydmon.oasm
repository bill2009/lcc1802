; generated by lcc-xr18NW $Version: 5.0 - XR18NW $ on Sun Apr 09 10:57:35 2017

SP:	equ	2 ;stack pointer
memAddr: equ	14
retAddr: equ	6
retVal:	equ	15
regArg1: equ	12
regArg2: equ	13
	listing off
	include lcc1802proloNW.inc
	listing on
_PIN4:
	db 0
;$$function start$$ _ef1
_ef1:		;framesize=2
;unsigned char ef1(){
;	asm(" rldi 15,1\n"
;	return 0; //if the assembly doesn't return, EF1 is not active
 rldi 15,1
 bn1 .ret0
 cretn ;will return a '1'
.ret0: ;will drop thru to return 0
	ld2z R15
L1:
	Cretn

;$$function end$$ _ef1
;$$function start$$ _disp12
_disp12:		;framesize=6
	reserve 4
;void disp12(){
;	initleds();
;	out(7,2);
 req
 seq
 dec 2
 out 7
 req
	ldaD R12,7; reg:acon
	ldaD R13,2; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,1);
	ldaD R12,7; reg:acon
	ldaD R13,1; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;}
L3:
	release 4
	Cretn

;$$function end$$ _disp12
;$$function start$$ _dispbl
_dispbl:		;framesize=6
	reserve 4
;void dispbl(){
;	initleds();
;	out(7,15);
 req
 seq
 dec 2
 out 7
 req
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;}
L5:
	release 4
	Cretn

;$$function end$$ _dispbl
;$$function start$$ _main
_main: ;copt is peeping your size 6 frame with oct 23 rules
	reserve 4
;{
	lbr L9
L8:
;	while(1){
;		out(1,1); //activate top row of keys
	ldaD R11,1; reg:acon
	cpy2 R12,R11 ;LOADI2(reg)
	cpy2 R13,R11 ;LOADI2(reg)
	Ccall _out; CALLI2(ar)
;		if(ef1()){ //key 12 pressed
	Ccall _ef1; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	jzU2 R11,L11; EQ 0
;			disp12();
	Ccall _disp12
;		}else{
	lbr L12
L11:
;			dispbl();
	Ccall _dispbl
;		}
L12:
;		delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
;	}
L9:
;	while(1){
	lbr L8
L13:
;	while(1);
L14:
	lbr L13
;}
L7:
	release 4
	Cretn

;$$function end$$ _main
;$$function start$$ _delay
_delay:		;framesize=10
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2054) 1
;void delay(unsigned int howlong){
;	for (i=1;i!=howlong;i++){
	ldaD R6,1; reg:acon
	lbr L20
L17:
;		oneMs();
	Ccall _oneMs; CALLI2(ar)
;	}
L18:
;	for (i=1;i!=howlong;i++){
	incm R6,1
L20:
	jneU2 R6,R7,L17; NE
;}
L16:
	release 4; release room for outgoing arguments
	popf R7	;opt11.3
	popl R6	;opt11.3
	Cretn

;$$function end$$ _delay
;$$function start$$ _olduinoincluder
_olduinoincluder:		;framesize=2
;void olduinoincluder(){
;	asm("\tinclude olduino.inc\n");
	include olduino.inc
;}
L21:
	Cretn

;$$function end$$ _olduinoincluder
	include lcc1802epiloNW.inc
	include IO1802.inc
