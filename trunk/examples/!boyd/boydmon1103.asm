; generated by lcc-xr18NW $Version: 5.0 - XR18NW $ on Mon Nov 06 09:07:13 2017

SP:	equ	2 ;stack pointer
memAddr: equ	14
retAddr: equ	6
retVal:	equ	15
regArg1: equ	12
regArg2: equ	13
	listing off
	include lcc1802proloNW.inc
	listing on
_PIN4:
	db 0
;$$function start$$ _boydinc
_boydinc:		;framesize=2
;void boydinc(){
;	asm(" include \"boydscan.inc\"\n");
 include "boydscan.inc"
;}
L1:
	Cretn

;$$function end$$ _boydinc
;$$function start$$ _disp1
_disp1:		;framesize=2
;void disp1(unsigned char d){//display a byte as two hex digits
;	asm(" glo 12\n ani 0x0f\n" //prep bottom digit
 glo 12
 ani 0x0f
 dec 2
 str 2
 out 7
 glo 12
 shr
 shr
 shr
 shr
 dec 2
 str 2
 out 7
;}
L3:
	Cretn

;$$function end$$ _disp1
;$$function start$$ _dispmemloc
_dispmemloc:		;framesize=8
	pushr R7
	reserve 4; save room for outgoing arguments
	st2 R12,'O',sp,(8+1); flag1 
;void dispmemloc(unsigned char * loc){
;	initleds();
;	disp1(*(loc+1));
 req
 seq
 dec 2
 out 7
 req
	ld2 R11,'O',sp,(8+1) ;reg:INDIRP2(addr)
	ld1 R12,'O',R11,(1)
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	disp1(*loc);
	ld2 R11,'O',sp,(8+1) ;reg:INDIRP2(addr)
	ld1 R12,'O',R11,0
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	lint=(unsigned int)loc;
	ld2 R11,'O',sp,(8+1) ;reg:INDIRP2(addr)
	cpy2 R7,R11 ;LOADU2*(reg)
;	disp1((unsigned int)loc&0xff);
	ld2 R11,'O',sp,(8+1) ;reg:INDIRP2(addr)
	alu2I R11,R11,255,ani,ani ;removed copy;BANDU2(reg,con)  
	cpy1 R12,R11
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _disp1
;	disp1(lint>>8);
	cpy2 R11,R7
	shrU2I R11,8
	cpy1 R12,R11
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _disp1
;}
L5:
	release 4; release room for outgoing arguments
	popr R7
	Cretn

;$$function end$$ _dispmemloc
;$$function start$$ _dispval
_dispval:		;framesize=8
	pushr R7
	reserve 4; save room for outgoing arguments
	st2 R12,'O',sp,(8+1); flag1 
	ldA2 R11,'O',sp,(8+1); reg:addr
	ld2 R10,'O',sp,(8+1) ;reg:INDIRI2(addr)
	str1 R10,R11; ASGNU1(indaddr,reg)		DH
;void dispval(unsigned char v){
;	initleds();
;	disp1(v);
 req
 seq
 dec 2
 out 7
 req
	ld1 R12,'O',sp,(8+1)
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _disp1
;	for (i=6;i!=0;i--) out(7,0);
	ldaD R7,6; reg:acon
	lbr L12
L9:
	ldaD R12,7; reg:acon
	ld2z R13
	Ccall _out; CALLI2(ar)
L10:
	decm R7,1	;SUBU2(reg,consm)
L12:
	jnzU2 R7,L9; NE 0 
;}
L7:
	release 4; release room for outgoing arguments
	popr R7
	Cretn

;$$function end$$ _dispval
;$$function start$$ _getsp
_getsp:		;framesize=2
;unsigned int getsp(){//return stack pointer value
;	asm(" cpy2 r15,sp\n"  	//copy stack pointer to return reg
;	return 0;				//not executed
 cpy2 r15,sp
 cretn
	ld2z R15
L13:
	Cretn

;$$function end$$ _getsp
;$$function start$$ _execute
_execute:		;framesize=16
	reserve 6; save room for local variables
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2055) 1
;unsigned char * execute(unsigned char * loc){
	lbr L17
L16:
;	while(1){
;		op=*loc; val=*(loc+1);
	ldn1 R6,R7;reg:  INDIRU1(indaddr)
	ldA2 R11,'O',sp,(13+1); reg:addr
	cpy2 R10,R7
	incm R10,1
	ldn1 R10,R10;reg:  INDIRU1(indaddr)
	str1 R10,R11; ASGNU1(indaddr,reg)		DH
;		switch (op){
	cpy1 R11,R6
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	st2 R11,'O',sp,(9+1); ASGNI2(addr,reg)
	ld2 R11,'O',sp,(9+1) ;reg:INDIRI2(addr)
	jcI2I R11,0,lbnf,L19  ;LT=lbnf i.e. subtract immedB from A and jump if borrow
	jnI2I R11,4,lbnf,L19; GT reverse  the subtraction
	shl2I R11,1
	ld2 R11,'O',R11,(L27) ;reg:INDIRP2(addr)
	jumpv R11; JUMPV(reg)
L27:
	dw L22
	dw L23
	dw L24
	dw L25
	dw L26
L22:
;				mp=(unsigned char *)(4096+val);
	ld1 R11,'O',sp,(13+1)
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	ldA2 R11,'O',R11,(4096); reg:addr
	st2 R11,'O',sp,(11+1); ASGNP2(addr,reg)
;				dispval(*mp); delay(1000);
	ld2 R11,'O',sp,(11+1) ;reg:INDIRP2(addr)
	ld1 R12,'O',R11,0
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _dispval
	ldaD R12,1000; reg:acon
	Ccall _delay
;				break;
	lbr L20
L23:
;				mp=(unsigned char *)(4096+val);
	ld1 R11,'O',sp,(13+1)
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	ldA2 R11,'O',R11,(4096); reg:addr
	st2 R11,'O',sp,(11+1); ASGNP2(addr,reg)
;				*mp+=1;
	ld2 R11,'O',sp,(11+1) ;reg:INDIRP2(addr)
	ld1 R10,'O',R11,0
	zExt R10 ;CVUI2: widen unsigned char to signed int (zero extend)
	incm R10,1
	str1 R10,R11; ASGNU1(indaddr,reg)		DH
;				break;
	lbr L20
L24:
;				loc=(unsigned char *)(val+4096-2); //ugh
	ld1 R11,'O',sp,(13+1)
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	ldA2 R11,'O',R11,(4096); reg:addr
	decm R11,2	;SUBI2(reg,consm)
	cpy2 R7,R11 ;LOADP2(reg)
;				break;
	lbr L20
L25:
;				delay(val*4);
	ld1 R11,'O',sp,(13+1)
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	shl2I R11,2
	cpy2 R12,R11 ;LOADU2*(reg)
	Ccall _delay
;				break;
	lbr L20
L26:
;				dispval(getsp());
	Ccall _getsp;CALLU2(ar)*
	cpy1 R11,R15;LOADU1(reg)
	cpy1 R12,R11
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _dispval
;				delay(250);
	ldaD R12,250; reg:acon
	Ccall _delay
;				break;
	lbr L20
L19:
;				dispval(0x41); delay(250);
	ldaD R12,65; reg:acon
	Ccall _dispval
	ldaD R12,250; reg:acon
	Ccall _delay
;				dispmemloc(loc); delay(5000);
	cpy2 R12,R7 ;LOADP2(reg)
	Ccall _dispmemloc
	ldaD R12,5000; reg:acon
	Ccall _delay
;				break;
L20:
;		loc+=2;
	incm R7,2
;	}
L17:
;	while(1){
	lbr L16
;	return loc;
	cpy2 R15,R7 ;LOADP2(reg)
L15:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	release 6; release room for local variables 
	Cretn

;$$function end$$ _execute
;$$function start$$ _hello
_hello:		;framesize=2
;void hello(){
;	asm(" seq ;activate the printer\n"
 seq ;activate the printer
 sex 3 ;inline output data
 nop
 nop
 nop
 nop
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '4'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 nop
 nop
 out 1
 db '2'
 nop
 nop
 req ;deactivate printer?
 sex 2 ;reset X register!
;}
L28:
	Cretn

;$$function end$$ _hello
;$$function start$$ _main
_main:		;framesize=14
	reserve 4; save room for local variables
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
;{
;	unsigned char * loc=0;
	ldaD R6,0; reg:acon
;	unsigned char memtype='o'; //displaying o=eeprom,a=ram
	ldA2 R11,'O',sp,(11+1); reg:addr
	str1I 111,R11; ASGNU1(indaddr,acon)	DH
;	dispval(0x43);
	ldaD R12,67; reg:acon
	Ccall _dispval
;	delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
;	dispval(0x44);
	ldaD R12,68; reg:acon
	Ccall _dispval
;	hello();
	Ccall _hello
;	dispval(0x45);
	ldaD R12,69; reg:acon
	Ccall _dispval
;	delay(5000);
	ldaD R12,5000; reg:acon
	Ccall _delay
	lbr L32
L31:
;	while(1){
;		dispmemloc(loc);
	cpy2 R12,R6 ;LOADP2(reg)
	Ccall _dispmemloc
;		k=boydscan();
	Ccall _boydscan; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	cpy1 R7,R11;LOADU1(reg)
;		switch(k){
	cpy1 R11,R7
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	st2 R11,'O',sp,(8+1); ASGNI2(addr,reg)
	ld2 R11,'O',sp,(8+1) ;reg:INDIRI2(addr)
	jcI2I R11,16,lbnf,L34  ;LT=lbnf i.e. subtract immedB from A and jump if borrow
	jnI2I R11,20,lbnf,L34; GT reverse  the subtraction
	shl2I R11,1
	ld2 R11,'O',R11,(L44-32) ;reg:INDIRP2(addr)
	jumpv R11; JUMPV(reg)
L44:
	dw L37
	dw L38
	dw L39
	dw L42
	dw L43
L37:
;				loc +=1;
	incm R6,1
;				break;
	lbr L35
L38:
;				loc -=1;
	ldA2 R6,'O',R6,(-1); reg:addr
;				break;
	lbr L35
L39:
;				if (memtype=='o'){
	ld1 R11,'O',sp,(11+1)
	jneU1I R11,111,L40	; DH 4
;					loc=(unsigned char *)4096;
	ldaD R6,0x1000; reg:acon
;					memtype='a';
	ldA2 R11,'O',sp,(11+1); reg:addr
	str1I 97,R11; ASGNU1(indaddr,acon)	DH
;				}else{
	lbr L35
L40:
;					loc=(unsigned char *)0;
	ldaD R6,0; reg:acon
;					memtype='o';
	ldA2 R11,'O',sp,(11+1); reg:addr
	str1I 111,R11; ASGNU1(indaddr,acon)	DH
;				}
;				break;
	lbr L35
L42:
;				dispmemloc(loc); //makes a blink
	cpy2 R12,R6 ;LOADP2(reg)
	Ccall _dispmemloc
;				k=boydscan(); dispval(k); delay(250);
	Ccall _boydscan; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	cpy1 R7,R11;LOADU1(reg)
	cpy1 R12,R7
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _dispval
	ldaD R12,250; reg:acon
	Ccall _delay
;				k2=boydscan(); dispval(k2); delay(250);
	Ccall _boydscan; CALLI2(ar)
	ldA2 R10,'O',sp,(10+1); reg:addr
	cpy2 R11,R15 ;LOADU2*(reg)
	str1 R11,R10; ASGNU1(indaddr,reg)		DH
	ld1 R12,'O',sp,(10+1)
	zExt R12 ;CVUI2: widen unsigned char to signed int (zero extend)
	Ccall _dispval
	ldaD R12,250; reg:acon
	Ccall _delay
;				*loc=(k<<4)+k2;
	cpy1 R11,R7
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	shl2I R11,4
	ld1 R10,'O',sp,(10+1)
	zExt R10 ;CVUI2: widen unsigned char to signed int (zero extend)
	alu2 R11,R11,R10,add,adc; ADDI2(r,r)
	str1 R11,R6; ASGNU1(indaddr,reg)		DH
;				break;
	lbr L35
L43:
;				dispval(0x45);
	ldaD R12,69; reg:acon
	Ccall _dispval
;				delay(250);
	ldaD R12,250; reg:acon
	Ccall _delay
;				loc=execute(loc);
	cpy2 R12,R6 ;LOADP2(reg)
	Ccall _execute
	cpy2 R6,R15 ;LOADP2(reg)
;				break;
	lbr L35
L34:
;				dispval(k);
	cpy1 R12,R7
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _dispval
;				delay(250);
	ldaD R12,250; reg:acon
	Ccall _delay
;		}
L35:
;	}
L32:
;	while(1){
	lbr L31
;}
L30:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	release 4; release room for local variables 
	Cretn

;$$function end$$ _main
;$$function start$$ _delay
_delay:		;framesize=10
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2054) 1
;void delay(unsigned int howlong){
;	for (i=1;i!=howlong;i++){
	ldaD R6,1; reg:acon
	lbr L50
L47:
;		oneMs();
	Ccall _oneMs; CALLI2(ar)
;	}
L48:
;	for (i=1;i!=howlong;i++){
	incm R6,1
L50:
	jneU2 R6,R7,L47; NE
;}
L46:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	Cretn

;$$function end$$ _delay
;$$function start$$ _olduinoincluder
_olduinoincluder:		;framesize=2
;void olduinoincluder(){
;	asm("\tinclude olduino.inc\n");
	include olduino.inc
;}
L51:
	Cretn

;$$function end$$ _olduinoincluder
	include lcc1802epiloNW.inc
	include IO1802.inc
