; generated by lcc-xr18NW $Version: 5.0 - XR18NW $ on Sun Apr 09 12:24:13 2017

SP:	equ	2 ;stack pointer
memAddr: equ	14
retAddr: equ	6
retVal:	equ	15
regArg1: equ	12
regArg2: equ	13
	listing off
	include lcc1802proloNW.inc
	listing on
_PIN4:
	db 0
;$$function start$$ _ef1
_ef1:		;framesize=2
;unsigned char ef1(){
;	asm(" rldi 15,1\n"
;	return 0; //if the assembly doesn't return, EF1 is not active
 rldi 15,1
 bn1 .ret0
 cretn ;will return a '1'
.ret0: ;will drop thru to return 0
	ld2z R15
L1:
	Cretn

;$$function end$$ _ef1
;$$function start$$ _ef2
_ef2:		;framesize=2
;unsigned char ef2(){
;	asm(" rldi 15,1\n"
;	return 0; //if the assembly doesn't return, EF1 is not active
 rldi 15,1
 bn2 .ret0
 cretn ;will return a '1'
.ret0: ;will drop thru to return 0
	ld2z R15
L3:
	Cretn

;$$function end$$ _ef2
;$$function start$$ _disp12
_disp12:		;framesize=6
	reserve 4
;void disp12(){
;	initleds();
;	out(7,2);
 req
 seq
 dec 2
 out 7
 req
	ldaD R12,7; reg:acon
	ldaD R13,2; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,1);
	ldaD R12,7; reg:acon
	ldaD R13,1; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;}
L5:
	release 4
	Cretn

;$$function end$$ _disp12
;$$function start$$ _disp42
_disp42:		;framesize=6
	reserve 4
;void disp42(){
;	initleds();
;	out(7,2);
 req
 seq
 dec 2
 out 7
 req
	ldaD R12,7; reg:acon
	ldaD R13,2; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,4);
	ldaD R12,7; reg:acon
	ldaD R13,4; reg:acon
	Ccall _out; CALLI2(ar)
;	out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;}
L7:
	release 4
	Cretn

;$$function end$$ _disp42
;$$function start$$ _dispbl
_dispbl:		;framesize=8
	pushr R7
	reserve 4; save room for outgoing arguments
;void dispbl(){
;	initleds();
;	for (i=8;i>0;i--){
 req
 seq
 dec 2
 out 7
 req
	ldaD R7,8; reg:acon
L11:
;		out(7,15);
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
;	}
L12:
;	for (i=8;i>0;i--){
	decm R7,1	;SUBI2(reg,consm)
	jnI2I R7,0,lbnf,L11; GT reverse  the subtraction
;}
L9:
	release 4; release room for outgoing arguments
	popr R7
	Cretn

;$$function end$$ _dispbl
;$$function start$$ _dispmemloc
_dispmemloc:		;framesize=14
	pushr R4
	pushr R5
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	st2 R12,'O',sp,(14+1); flag1 
;void dispmemloc(unsigned int loc){
;	register unsigned char* m=0;
	ldaD R7,0; reg:acon
;	initleds();
;	m1=m[loc]>>4;
 req
 seq
 dec 2
 out 7
 req
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	alu2 R11,R11,R7,add,adc	;ADDP2(reg,reg)
	ld1 R11,'O',R11,0
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	shrI2I R11,4
	cpy1 R6,R11;LOADU1(reg)
;	m2=m[loc]&0x0f;
	ld2 R11,'O',sp,(14+1) ;reg:INDIRU2(addr)
	alu2 R11,R11,R7,add,adc	;ADDP2(reg,reg)
	ld1 R11,'O',R11,0
	zExt R11 ;CVUI2: widen unsigned char to signed int (zero extend)
	alu2I R11,R11,15,ani,ani
	;removed ?	cpy2 R11,R11
	cpy1 R5,R11;LOADU1(reg)
;	out(7,m2); out(7,m1);
	ldaD R12,7; reg:acon
	cpy1 R13,R5
	zExt R13 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _out; CALLI2(ar)
	ldaD R12,7; reg:acon
	cpy1 R13,R6
	zExt R13 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _out; CALLI2(ar)
;	for (i=6;i!=0;i--) out(7,15);
	ldaD R4,6; reg:acon
	lbr L20
L17:
	ldaD R12,7; reg:acon
	ldaD R13,15; reg:acon
	Ccall _out; CALLI2(ar)
L18:
	decm R4,1	;SUBU2(reg,consm)
L20:
	jnzU2 R4,L17; NE 0 
;}
L15:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	popr R5
	popr R4
	Cretn

;$$function end$$ _dispmemloc
;$$function start$$ _main
_main:		;framesize=6
	reserve 4
;{
;	disp42();
	Ccall _disp42
;	delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
;	dispmemloc(0);
	ld2z R12
	Ccall _dispmemloc
;	delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
	lbr L23
L22:
;	while(1){
;		out(1,1); //activate top row of keys
	ldaD R11,1; reg:acon
	cpy2 R12,R11 ;LOADI2(reg)
	cpy2 R13,R11 ;LOADI2(reg)
	Ccall _out; CALLI2(ar)
;		if(ef1()){ //key 12 pressed
	Ccall _ef1; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	jzU2 R11,L25; EQ 0
;			disp12();
	Ccall _disp12
;		} else if(ef2()){//key 8
	lbr L26
L25:
	Ccall _ef2; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	zExt R11 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	jzU2 R11,L27; EQ 0
;			dispmemloc(01);
	ldaD R12,1; reg:acon
	Ccall _dispmemloc
;		}else{
	lbr L28
L27:
;			dispmemloc(02);;
	ldaD R12,2; reg:acon
	Ccall _dispmemloc
;		}
L28:
L26:
;	}
L23:
;	while(1){
	lbr L22
L29:
;	while(1);
L30:
	lbr L29
;}
L21:
	release 4
	Cretn

;$$function end$$ _main
;$$function start$$ _delay
_delay:		;framesize=10
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2054) 1
;void delay(unsigned int howlong){
;	for (i=1;i!=howlong;i++){
	ldaD R6,1; reg:acon
	lbr L36
L33:
;		oneMs();
	Ccall _oneMs; CALLI2(ar)
;	}
L34:
;	for (i=1;i!=howlong;i++){
	incm R6,1
L36:
	jneU2 R6,R7,L33; NE
;}
L32:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	Cretn

;$$function end$$ _delay
;$$function start$$ _olduinoincluder
_olduinoincluder:		;framesize=2
;void olduinoincluder(){
;	asm("\tinclude olduino.inc\n");
	include olduino.inc
;}
L37:
	Cretn

;$$function end$$ _olduinoincluder
	include lcc1802epiloNW.inc
	include IO1802.inc
