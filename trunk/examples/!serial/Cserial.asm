; generated by lcc-xr18NW $Version: 5.0 - XR18NW $ on Wed Mar 29 15:56:14 2017

SP:	equ	2 ;stack pointer
memAddr: equ	14
retAddr: equ	6
retVal:	equ	15
regArg1: equ	12
regArg2: equ	13
	listing off
	include lcc1802proloNW.inc
	listing on
_PIN4:
	db 0
;$$function start$$ _getcser
_getcser:		;framesize=2
;unsigned char getcser(){
;	asm(" ldi 0\n plo 15\n ldi 8\n plo 11\n");
;	asm(" bn3 $\n");
;	asm(" ldi (LCC1802CPUSPEED/5000/16)/2\n" //.2ms
;	asm(".nextbit:\n");
;		asm(" ldi (LCC1802CPUSPEED/2500/16)/2\n" //.4ms
;		asm(" ldi 0	;assume no bit\n"
;		asm(" dec 11\n");
;	asm(" glo 11\n bnz .nextbit\n");
;	asm(" cretn\n");
;	return 0; //just to keep the compiler happy
 ldi 0
 plo 15
 ldi 8
 plo 11
 bn3 $
 ldi (LCC1802CPUSPEED/5000/16)/2
.dh smi 1
 bnz .dh
.nextbit:
 ldi (LCC1802CPUSPEED/2500/16)/2
.d1 smi 1
 bnz .d1
 ldi 0	;assume no bit
 b3  .nobit
 ldi 1
 ;set the bit
.nobit:
 shr	;move bit/nobit to df
 glo 15
 shrc
 plo 15
 dec 11
 glo 11
 bnz .nextbit
 cretn
	ld2z R15
L1:
	Cretn

;$$function end$$ _getcser
;$$function start$$ _main
_main:		;framesize=8
	pushr R7
	reserve 4; save room for outgoing arguments
;void main(){
;	asm(" seq\n"); //make sure Q is high to start
 seq
	lbr L14
L13:
;	while(1){
;		putcser('?');
	ldaD R12,63; reg:acon
	Ccall _putcser
;		c=getcser();
	Ccall _getcser; CALLI2(ar)
	cpy2 R11,R15 ;LOADU2*(reg)
	cpy1 R7,R11;LOADU1(reg)
;		asm(" seq\n req\n");
;		putc(c);
 seq
 req
	cpy1 R12,R7
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _putc; CALLI2(ar)
;		asm(" seq\n req\n");
;		putcser(c);
 seq
 req
	cpy1 R12,R7
	zExt R12 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	Ccall _putcser
;		delay(1000);
	ldaD R12,1000; reg:acon
	Ccall _delay
;	}
L14:
;	while(1){
	lbr L13
;}
L11:
	release 4; release room for outgoing arguments
	popr R7
	Cretn

;$$function end$$ _main
;$$function start$$ _noname
_noname:		;framesize=2
;void noname(){
;	asm(" include IOser1802.inc\n");
 include IOser1802.inc
;}
L18:
	Cretn

;$$function end$$ _noname
;$$function start$$ _delay
_delay:		;framesize=10
	pushr R6
	pushr R7
	reserve 4; save room for outgoing arguments
	cpy2 R7,R12; function(2054) 1
;void delay(unsigned int howlong){
;	for (i=1;i!=howlong;i++){
	ldaD R6,1; reg:acon
	lbr L24
L21:
;		oneMs();
	Ccall _oneMs; CALLI2(ar)
;	}
L22:
;	for (i=1;i!=howlong;i++){
	incm R6,1
L24:
	jneU2 R6,R7,L21; NE
;}
L20:
	release 4; release room for outgoing arguments
	popr R7
	popr R6
	Cretn

;$$function end$$ _delay
;$$function start$$ _olduinoincluder
_olduinoincluder:		;framesize=2
;void olduinoincluder(){
;	asm("\tinclude olduino.inc\n");
	include olduino.inc
;}
L25:
	Cretn

;$$function end$$ _olduinoincluder
	include lcc1802epiloNW.inc
	include IO1802.inc
