
;The following source code assumes an 1802 clock speed of 1.79 to 1.8Mhz ONLY
;Written by Charles James Yakym, aka Chuck Yakym
;
;Bill Rowe has my full permission to incorporate this listing (9600 baud normal and inverted logic
;both the receive and transmit routines) use this software and distribute in any matter or form.
;Charles James Yakym
;
;Enjoy.... 
;
; 
;The following source code is for use with the A18 assembler
;

;9600 BAUD ONLY INPUT ROUTINE - INVERTED LOGIC

;RB.0 = INPUTTED CHARACTER
;RE.0 = DELAY COUNTER = 2 AT 9600 BAUD
rb:	equ	11
rd:	equ	13
re:	equ	14
rf:	equ	15
_getcser:
	ldi	2	;delay constant
	plo	re	; in re
	B3	$	;WAIT FOR STOP BIT 

	LDI	0FFH	;INITIALIZE INPUT CHARACTER TO FFh
	PLO	RB	;STORE IT IN RB.0
	GLO	RE	;GET DELAY COUNT

	BN3  $	;WAIT FOR START BIT 

	SHR		;DELAY COUNTER DEVIDED BY 2 (.5 BIT TIME VALUE)
	SKP		;SKIP TO DELAY


.B96IN2	GLO	RE	;GET DELAY COUNT
.B96IN3	SMI	01H	;DECREMENT DELAY COUNT
	BNZ	.B96IN3	;WHEN DONE WITH DELAY D=0 AND DF=1

	B3	.B96IN4	;GET NEXT BYTE
	SKP		;IF BIT=0 (EF3 PIN HIGH), LEAVE DF=0
.B96IN4	SHR		;IF BIT=1 (EF3 PIN LOW), SET DF=1
	GLO	RB	;GET INCOMING BYTE
	SHRC		;RING SHIFT BIT RIGHT
	PLO	RB	;STORE BYTE IN RB.0
	LBDF	.B96IN2	; if DF=1, then Start bit hasn't shifted all
			;    the way thru byte. Loop until it does

			;DELAY BETWEEN LAST BIT AND THE STOP BIT
	GLO	RE	; 
.B96IN5	SMI 1		;DECREMENT DELAY COUNT
	BNZ .B96IN5	; 

	GLO	RB	;returned value
	plo	rf	;into rf	
	cretn		; RETURN

_putcser:
	glo	r12	;character to put
	plo	RB	;where chuck expects it
	ldi	1	;delay constant
	plo	RE	;as required
;-----------------------
;9600 BAUD RATE ONLY OUTPUT ROUTINE - INVERTED LOGIC

;RF.0 = BIT COUNT 
;	THE FIRST BIT IS BEING PROCESSED WHILE THE START BIT
;	IS BEING SENT OUT, AS SOON AS THE START BIT IS DONE
;	IT OUTPUTS THE FIRST BIT.

;RB.0 = CHARACTER TO OUTPUT

;RE.0 	DELAY COUNTER = 1 AT 9600 BAUD

;SEND START BIT
;ENTRY POINT FOR THE OUTPUT ROUTINE
	LDI	08H
	PLO	RF

	GLO	RB	; LOAD D WITH RB.0
	STR	R2	; PUSH RB,0 ONTO THE STACK
	DEC	R2
	GLO	RD	; LOAD D WITH RD.0
	STR	R2	; PUSH RD.0 ONTO THE STACK
	DEC	R2
	ldi	1
	plo	RE	;SET DELAY COUNTER = 1

	REQ		;1	START BIT
	NOP		;2.5
	NOP		;4
	GLO	RB	;5
	SHRC		;6	DF=1ST BIT OUT
	PLO	RB	;7
	PLO	RB	;8
	NOP		;9.5 INSTUCTIONS SINCE START BIT

			;DETERMINE FIRST BIT AND OUTPUT IT
	BDF	.STBIT1	;DF = 1, IF BIT IS LOW THEN JUMP TO OUTPUT4
	BR	.QLO		;JUMP AT 11.5 INSTRUCTION TIME, Q=OFF

.STBIT1	BR	.eQHI		;JUMP AT 11.5 INSTRUCTION TIME, Q=ON



.QLO1	DEC	RF
	GLO	RF
	BZ	.DONE96	;AT 8.5 INSTRUCTIONS EITHER DONE OR REQ

;DELAY
	GLO	RE
.LDELAY	SMI	01H
	BZ	.QLO	;IF DELAY IS DONE THEN TURN Q OFF
			;ADJUST DELAY FOR LOWER BAUD RATES
			;WASTE 9.5 INSTRUCTION TIMES
	NOP		;1.5
	NOP		;3
	NOP		;4.5
	NOP		;6
	NOP		;7.5
	SEX	R2	;8.5
	BR	.LDELAY	;AT 9.5 INSTRUCTION TIMES JUMP TO LDELAY

.QLO	REQ		;Q OFF
	GLO	RB
	SHRC		;PUT NEXT BIT IN DF
	PLO	RB
	LBNF	.QLO1	;5.5 TURN Q OFF AFTER 6 MORE INSTRUCTION TIMES

.QHI1	DEC	RF
	GLO	RF
	BZ	.DONE96	;AT 8.5 INSTRUCTIONS EITHER DONE OR SEQ

;DELAY
	GLO	RE
.HDELAY	SMI	01H
	BZ	.eQHI	;IF DELAY IS DONE THEN TURN Q ON
			;ADJUST DELAY FOR LOWER BAUD RATES
			;WASTE 9.5 INSTRUCTION TIMES
	NOP		;1.5
	NOP		;3 
	NOP		;4.5
	NOP		;6
	NOP		;7.5
	SEX	R2	;8.5
	BR	.HDELAY	;AT 9.5 INSTRUCTION TIMES JUMP TO HDELAY

			;BIT IS LO 11.5 INSTRUCTIONS TURN Q ON
.eQHI	SEQ		;Q ON
	GLO	RB
	SHRC		;PUT NEXT BIT IN DF
	PLO	RB
	LBDF	.QHI1	;5.5 TURN Q ON AFTER 6 MORE INSTRUCTION TIMES

	DEC	RF
	GLO	RF
	BZ	.DONE96	;AT 8.5 INSTRUCTIONS EITHER DONE OR REQ

;DELAY
	GLO	RE
.XDELAY	SMI	01H
	BZ	.QLO	;IF DELAY IS DONE THEN TURN Q OFF

			;ADJUST DELAY FOR LOWER BAUD RATES
			;WASTE 9.5 INSTRUCTION TIMES
	NOP		;1.5
	NOP		;3 
	NOP		;4.5
	NOP		;6
	NOP		;7.5
	SEX	R2	;8.5
	BR	.XDELAY	;AT 9.5 INSTRUCTION TIMES JUMP TO XDELAY

			;FINISH LAST BIT TIMING
.DONE96	GLO	RE
	GLO	RE
	GLO	RE

.DNE961	SEQ		;1 SEND STOP BIT
	NOP		;2.5
	NOP		;4
	NOP		;5.5
	NOP		;7
	NOP		;8.5
	SEX	R2	;9.5
	SMI	01H	;10.5
	BNZ	.DNE961	;11.5
			;NOTE - STOP BIT IS 2 INSTRUCTION TIMES LONGER THEN NEEDED
			;	PLUS THE RETURN TO CALLER TIME
	
	INC	R2	; INCREMENT THE STACK POINTER
	LDN	R2	; LOAD D FROM THE STACK , AND THE STACK IS INCREMENTED
	PLO	RD	; STORE IT IN RD.0 , RD RESTORED
	INC	R2	; INCREMENT THE STACK POINTER
	LDN	R2	; LOAD D FROM THE STACK , AND THE STACK IS INCREMENTED
	PLO	RB	; STORE IT IN RB.0 , RB RESTORED


	LDI	02H
	PLO	RE	;RESTORE RE.0 FOR 9600 BAUD INPUT ROUTINE

;	SEP	R5	;DONE WITH STOP BIT - RETURN TO CALLER
	cretn		;return to C program