	release 0; release room for local variables 
=

#!11
_main:		;framesize=%1
=
_main: ;copt is peeping your size %1 frame!

	cpy2 %1,%2 ;LOADP2(reg)
	cpy2 %2,%1
=
	cpy2 %1,%2 ;LOADP2(reg) ;opt1

	shrU2I %1,8
=
	ghi	%1	;opt2
	plo	%1
	ldi	0
	phi	%1	

	ld2 %1,'O',sp,(%2) ;reg:INDIRI2(addr)
	st1 %1,'O',sp,(%2); ASGNU1
=
	demote	%2	;opt3

	st2 %1,'O',sp,(%2); flag1 
	demote	%2	;opt3
=
	st1 %1,'O',sp,(%2)	; opt4 

	st2 %1,'O',%2,0; ASGNI2(addr,reg)*;
=
	str2 %1,%2	;opt5

	st2 %1,'O',%2,0; ASGNP2
=
	str2 %1,%2	;opt5.1

	st2 %1,'O',sp,(0); ASGNI2(addr,reg)*;
;%9
=
	cpy2 memaddr,sp	;opt5.3
	str2 %1,memaddr
;%9

	ldaD %1,%2; reg:acon
	str2 %1,%3	;%8
;    %9
=
	str2I %2,%3	;opt8 from %8
;    %9

	ld2z %1
	str2 %1,%2	;opt5
;      %9
=
	str2I 0,%2	;opt8.1
;      %9

	ldaD %1,%2; reg:acon
	str2 %1,%3	;opt5
%9:
=
	str2I %2,%3	;opt8.2
%9:

	ldaD %1,%2; reg:acon
	str2 %1,%3	;opt5
%9:
=
	str2I %2,%3	;opt8.2
%9:

	st2I %1,'O',%2,0; ASGNI2(addr,acon)
;%9
=
	str2I %1,%2	;opt8.3
;%9

	cpy2 %1,%2
	shl2I %1,1
=
	shlR2R	%1,%2	;opt6

	ld2 %1,'O',%1,0 ;reg:INDIRI2(addr)
=
	ldn2s %1,%1	;opt9

	ld2 %1,'O',%2,0 ;reg:INDIRI2(addr)
=
	ldn2 %1,%2	;opt9.1

	ld2 %1,'O',%1,0;reg:  INDIRP2(addr)
=
	ldn2s %1,%1	;opt9.2

	ld2 %1,'O',%2,0;reg:  INDIRP2(addr)
=
	ldn2 %1,%2	;opt9.3

	ldaD %1,%2; reg:acon
	st2 %1,'O',sp,(%3); ASGNI2(addr,reg)*;
;    %9
=
	st2I %2,'O',sp,(%3)	;opt10
;    %9

	ldaD %1,%2; reg:acon
	st2 %1,'O',sp,(%3); ASGNI2(addr,reg)*;
	lbr %5
%9:
=
	st2I %2,'O',sp,(%3)	;opt10.1
	lbr %5
%9:

	ld2z %1
	st2 %1,'O',sp,(%2); ASGNI2(addr,reg)*;
%9:
=
	st2I 0,'O',sp,(%2)	;opt10.2
%9:

	pushr %1
	pushr %2
=
	pushf %1	;opt11
	pushl %2	;opt11

	pushl %1	;%3
	pushr %2
=
	pushm %1	;opt11.1
	pushl %2	;opt11.1

	ld2 %1,%2,%3,%4 ;reg:INDIRI2(addr)
	st2 %1,%5,%6,%7; ASGNI2(addr,reg)*;
	lbr %8
%9:
=
	mvc2 %1,%5,%6,%7,%2,%3,%4	;opt12
	lbr %8
%9:

	ld2 %1,%2,%3,%4 ;reg:INDIRI2(addr)
	st2 %1,%5,%6,%7; arg+f**
	ld2 %1,'O',sp,(%8) ;reg:INDIRI2(addr)
=
	mvc2 %1,%5,%6,%7,%2,%3,%4	;opt12.1
	ld2 %1,'O',sp,(%8) ;reg:INDIRI2(addr)

	ld2 %1,%2,%3,%4 ;reg:INDIRI2(addr)
	st2 %1,%5,%6,%7; arg+f**
	Ccall %8; CALLI2(ar)
=
	mvc2 %1,%5,%6,%7,%2,%3,%4	;opt12.2
	Ccall %8; CALLI2(ar)

	ld2 %1,%2,%3,%4;reg:  INDIRP2(addr)
	st2 %1,%5,%6,%7; ASGNP2
;%9
=
	mvc2 %1,%5,%6,%7,%2,%3,%4	;opt12.3
;%9

	ldn2 %1,%2	;opt9.3
	str2 %1,%3	;opt5.1
;%9
=
	mvcn2 %3,%2	;opt12.4
;%9

	ldn2 %1,%2	;opt9
	str2 %1,%3	;opt5
;%9
=
	mvcn2 %3,%2	;opt12.5
;%9

	cpy1 %1,%2
	zExt %1 ;CVUI2(reg)*: widen unsigned char to signed int (zero extend)*
	incm %1,1
	cpy1 %2,%1;LOADU1(reg)
%9:
=
	incm %2,1	;opt13
%9:

	ld1 %1,'O',%2,0
=
	ldn1 %1,%2	;opt14*

	ld1 %1,'O',sp,(0)
=
	ldn1 %1,sp	;opt14.1*

	st2 R12,'O',sp,(%1); flag1 
	st2 R13,'O',sp,(%2); flag2
=
	st2 R12,'O',sp,(%1)			
	inc memaddr				;opt16
	str2 R13,memaddr			

	st2 R12,'O',sp,(%1); flag1 
	st2 R13,'O',sp,(%2); flag1 
=
	st2 R12,'O',sp,(%1)			
	inc memaddr				;opt16.1
	str2 R13,memaddr			

	ld2 R10,'O',sp,(0) ;reg:INDIRI2(addr)
	alu2 R10,R13,R10,add,adc; ADDI2(r,r)
=
	alu2RS R10,R13,'O',sp,(0),add,adc	;opt15

	ldA2 %1,'O',sp,(1); reg:addr
=
	cpy2 %1,sp				;opt17
	inc %1

	ldA2 %1,'O',sp,(0); reg:addr
=
	cpy2 %1,sp				;opt17

	ld1 R10,'O',sp,(1)
	str1 R10,R11; ASGNU1(indaddr,reg)		DH
;%9
=
	cpy2 memaddr,sp				;opt18
	inc memaddr
	ldn memaddr
	str R11
;%9

	ld2 %1,'O',sp,(0) ;reg:INDIRI2(addr)
=
	cpy2 memaddr,sp				;opt19
	ldn2 %1,memaddr

	ldn2 %1,memaddr
	jneU2I %1,%2,%3; NE
;%9
=
	lda memaddr				;opt20
	smi (%2)>>8
	bnz %3
	ldn memaddr
	smi (%2)&255
	bnz %3
;%9
